<?phpnamespace Admin\Controller;use Admin\Controller;class ArticleCateController extends RootController{	/**	 * 分类列表	 */	public function index(){		$catelist = D('ArticleCate')->get_cate_list(0);		foreach($catelist as &$val){			$val['total'] = M("Article")->where(array('cate_id'=>$val['id']))->count();			$val['sort'] = end(explode(',',$val['sort']));		}		$this->assign('catelist',$catelist);		$this->display();	}	public function add(){		if(IS_POST){			if(D('ArticleCate')->add_cate($_POST['id'],$_POST)){				if($_POST['id'] != 0){					D('ArticleCate')->save_item(array('id'=>$_POST['id'],'is_able'=>0));				}				$this->redirect('ArticleCate/index');			}else{				$this->error('添加失败！');			}		}	}	/**	 *编辑分类	 *@create 2015-2-6	 *@author zjf	 */	public function edit(){		if(IS_POST){			$res = D('ArticleCate')->save_item($_POST);			if($res['status']){				$this->success('编辑成功！','ArticleCate/index');			}else{				$this->error('编辑失败！');			}		}else{			$page = D('ArticleCate')->get_self($_GET['id']);			$this->assign('page',$page);			//图片库提取			$where['status'] = 1;			$piclist = M('Picture')->where($where)->field(true)->order('addtime desc')->limit('0,4')->select();			$this->assign('piclist',$piclist);			//附加属性提取			$attr = M('ArticleAttr')->where(array('cateid'=>$_GET['id']))->order('sort,id')->select();			$this->assign('attrlist',$attr);			//组件类提取			$widget = C('ATTR_IDENTIFY');			$this->assign('widget',$widget);			$this->display();		}	}	/**	 * 迁移数据	 */	public function ajax_content_move(){		//dump($_POST);exit;		$res = M('Article')->where(array('cate_id'=>$_POST['from_id']))->setField('cate_id',$_POST['to_id']);		if(false !== $res){			$this->ajaxReturn(array('status'=>1));		}else{			$this->ajaxReturn(array('status'=>0,'迁移出错！'));		}	}	/**	 * 设置分类状态	 */	public function ajax_set_is_show(){		$res = M('ArticleCate')->where(array('id'=>$_POST['id']))->setField('is_show',$_POST['val']);		if(false !== $res){			$this->ajaxReturn(array('status'=>1));		}else{			$this->ajaxReturn(array('status'=>0,'设置出错！'));		}	}	/**	 * 删除一个分类	 * =0(删除失败),=1(删除成功),=2(当前分类下有文章),=3(当前分类有子类)	 */	public function ajax_del_cate(){		$ids = D("ArticleCate")->get_child_ids($_POST['id']);		$article = M('Article')->where(array('cate_id'=>array('in',$ids)))->find();		if($article){			$this->ajaxReturn(array('status'=>0,'error'=>'当前分类或子类下有文章，请删除后进行此操作！'));		}		$res = D('ArticleCate')->del_cate($_POST['id']);		if($res){			M('ArticleAttr')->where(array('cateid'=>$_POST['id']))->delete();		}		$this->ajaxReturn(array('status'=>1,'ids'=>explode(',',$ids)));	}	/**	 *文章分类新增附加属性	 *@create 2015-2-6	 *@author zjf	 */	public function ajax_add_attr(){		$res = M("ArticleAttr")->data($_POST)->add();		if($res){			$data['status'] = 1;			$data['content'] = $_POST;			$data['content']['id'] = $res;		}		$this->ajaxReturn($data);	}	/**	 *ajax设置排序	 *@create 2014-12-16	 *@author zjf	 */	public function ajax_setsort(){		$res = D('ArticleCate')->update_sort($_POST['id'],$_POST['sort']);		$this->ajaxReturn($res);	}}